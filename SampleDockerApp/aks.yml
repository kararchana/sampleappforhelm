apiVersion: apps/v1
kind: Deployment
metadata:
  name: SampleDockerApp-deployment
spec:
  selector:
    matchLabels:
      app: SampleDockerApp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: SampleDockerApp
    spec:
      containers:
      - name: SampleDockerApp
        image: samplecontainer11.azurecr.io/kararchana/sampleappforhelm:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
        env:
          - name: PODNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      imagePullSecrets:
      - name: demoaks
---
apiVersion: v1
kind: Service
metadata:
  name: SampleDockerApp
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 9001
  selector:
    app: SampleDockerApp
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: SampleDockerApp
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: SampleDockerApp.1266e945191348aba61c.eastus2.aksapp.io
    http:
      paths:
      - backend:
          serviceName: SampleDockerApp
          servicePort: 80
        path: /
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: SampleDockerApp
  namespace: default
spec:
  minReplicas: 5
  maxReplicas: 10
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: SampleDockerApp-deployment
  targetCPUUtilizationPercentage: 10
